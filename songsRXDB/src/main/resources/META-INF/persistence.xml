<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="2.0">
    <!-- Prod Unit -->
    <persistence-unit name="songRXDB-Prod-PU" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>de.htw.ai.kbe.bean.User</class>
        <class>de.htw.ai.kbe.bean.Song</class>
        <class>de.htw.ai.kbe.bean.Songlist</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/><!-- DB Driver -->
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:postgresql://db.f4.htw-berlin.de:5432/_s0556127__kbe_songsdb"/> <!-- DB Name -->
            <property name="javax.persistence.jdbc.user" value="_s0556127__kbe_songsdb_generic"/> <!-- DB User -->
            <property name="hibernate.default_schema" value="prod"/> <!-- DB default schema -->
            <property name="javax.persistence.jdbc.password" value="T0astBr0t"/> <!-- DB Password -->
            <property name="hibernate.show_sql" value="true"/>  <!-- Show SQL in console -->
            <property name="hibernate.format_sql" value="true"/> <!-- Show SQL formatted -->
            <property name="hibernate.hbm2ddl.auto" value="create"/> <!-- object model created based on the mappings (annotations), and then updates the schema according to the diff -->
            <property name="hibernate.hbm2ddl.import_files" value="initial-prod.sql"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL95Dialect"/> <!-- DB Dialect -->
            <property name="hibernate.c3p0.min_size" value="1"/> <!-- min. connections in pool -->
            <property name="hibernate.c3p0.max_size" value="5"/> <!-- max. connections in pool -->
            <property name="hibernate.c3p0.acquire_increment" value="0"/> <!-- Number of connections acquired at a time when pool is exhausted -->
            <property name="hibernate.c3p0.timeout" value="1500"/> <!-- Timeout for connections in pool -->
            <property name="hibernate.c3p0.idle_test_period" value="5"/><!-- seconds -->
            <property name="hibernate.c3p0.max_statements" value="50"/> <!-- Cached Statemente in pool -->
            <property name="hibernate.c3p0.maxIdleTimes" value="5"/><!-- seconds -->
            <property name="hibernate.connection.release_mode"
                      value="after_transaction"/>  <!-- released connection only after transaction either commits or rolls back  -->
        </properties>
    </persistence-unit>

    <!-- Test Unit -->
    <persistence-unit name="songRXDB-Test-PU" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>de.htw.ai.kbe.bean.User</class>
        <class>de.htw.ai.kbe.bean.Song</class>
        <class>de.htw.ai.kbe.bean.Songlist</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/><!-- DB Driver -->
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:postgresql://db.f4.htw-berlin.de:5432/_s0556127__kbe_songsdb"/> <!-- DB Name -->
            <property name="javax.persistence.jdbc.user" value="_s0556127__kbe_songsdb_generic"/> <!-- DB User -->
            <property name="hibernate.default_schema" value="test"/> <!-- DB default schema -->
            <property name="javax.persistence.jdbc.password" value="T0astBr0t"/> <!-- DB Password -->
            <property name="hibernate.show_sql" value="true"/>  <!-- Show SQL in console -->
            <property name="hibernate.format_sql" value="true"/> <!-- Show SQL formatted -->
            <property name="hibernate.hbm2ddl.auto" value="create"/> <!-- first drops existing tables, then creates new -->
            <property name="hibernate.hbm2ddl.import_files" value="initial-test.sql"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL95Dialect"/> <!-- DB Dialect -->
            <property name="hibernate.c3p0.min_size" value="1"/> <!-- min. connections in pool -->
            <property name="hibernate.c3p0.max_size" value="3"/> <!-- max. connections in pool -->
            <property name="hibernate.c3p0.acquire_increment" value="0"/> <!-- Number of connections acquired at a time when pool is exhausted -->
            <property name="hibernate.c3p0.timeout" value="1500"/> <!-- Timeout for connections in pool -->
            <property name="hibernate.c3p0.idle_test_period" value="5"/><!-- seconds -->
            <property name="hibernate.c3p0.max_statements" value="50"/> <!-- Cached Statemente in pool -->
            <property name="hibernate.c3p0.maxIdleTimes" value="5"/><!-- seconds -->
            <property name="hibernate.connection.release_mode" value="after_statement"/>
        </properties>
    </persistence-unit>
</persistence>